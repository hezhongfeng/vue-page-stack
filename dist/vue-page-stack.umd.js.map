{"version":3,"file":"vue-page-stack.umd.js","sources":["../src/lib/utils.ts","../src/config/index.ts","../src/config/constant.ts","../src/config/enum.ts","../src/core/action.ts","../src/core/context.ts","../src/core/stack.ts","../src/components/StackRouterView.ts","../src/core/guard.ts","../src/core/index.ts","../src/core/proxy.ts"],"sourcesContent":["/**\r\n * 创建一个随机的字符串 key\r\n *\r\n * @param len 字符串的长度\r\n */\r\nexport const createKey = (len = 6) => {\r\n  return Math.random()\r\n    .toString(16)\r\n    .substring(2, len + 2)\r\n}\r\n\r\n/**\r\n * 判断值是否为 `null` | `undefined`\r\n *\r\n * @param value 值\r\n */\r\nexport const isNil = (value: any) => {\r\n  return value === null || value === undefined\r\n}\r\n\r\n/**\r\n * 判断值是否为 `isNil` |  `空字符串`\r\n * @param value 值\r\n */\r\nexport const isEmpty = (value: any) => {\r\n  return isNil(value) || value === ''\r\n}\r\n\r\n/**\r\n * 树形数组转为一维数组\r\n *\r\n * @param data 数据源\r\n */\r\nexport const flattenArrayTree = <T extends { children?: T[] }>(data: T[]) => {\r\n  return data.reduce((a, b) => {\r\n    a.push(b)\r\n    if (b.children) {\r\n      a.push(...flattenArrayTree(b.children))\r\n    }\r\n    return a\r\n  }, [] as T[])\r\n}\r\n\r\n/**\r\n * 从对象中获取指定集合的值，忽略 null & undefined 值，返回新的对象\r\n *\r\n * @param data 数据源\r\n * @param keys 键集合\r\n */\r\nexport const pick = <T, K extends keyof T>(data?: T, ...keys: K[]) => {\r\n  type PickResult = {\r\n    [P in K]: T[P]\r\n  }\r\n\r\n  const result: PickResult = {} as any\r\n\r\n  if (!(data && keys)) {\r\n    return result\r\n  }\r\n\r\n  for (const key of keys) {\r\n    if (!isNil(data[key])) {\r\n      result[key] = data[key]\r\n    }\r\n  }\r\n  return result\r\n}\r\n\r\nexport const noop = () => undefined\r\n","import { pick } from 'src/lib/utils'\r\nimport { VuePageStackConfig } from 'src/type/interface'\r\n\r\nimport { COMPONENT_NAME, KEY_NAME } from './constant'\r\n\r\nconst defaultConfig: VuePageStackConfig = {\r\n  keyName: KEY_NAME,\r\n  componentName: COMPONENT_NAME\r\n}\r\n\r\nlet config: VuePageStackConfig\r\n\r\nexport const setConfig = (options: Partial<VuePageStackConfig>) => {\r\n  config = {\r\n    ...defaultConfig,\r\n    ...pick(options, 'keyName', 'componentName')\r\n  }\r\n}\r\n\r\nexport const useConfig = () => {\r\n  return config\r\n}\r\n","/**\r\n * 组件的 name 属性\r\n */\r\nexport const COMPONENT_NAME = 'StackRouterView'\r\n\r\n/**\r\n * url 中的 key 参数标识\r\n */\r\nexport const KEY_NAME = 'page_key'","/**\r\n * router 执行的动作\r\n */\r\nexport enum Action {\r\n  PUSH = 'push',\r\n  GO = 'go',\r\n  REPLACE = 'replace',\r\n  BACK = 'back',\r\n  FORWARD = 'forward'\r\n}\r\n\r\n","import { Action } from 'src/config/enum'\r\n\r\nconst action = { value: Action.PUSH }\r\n\r\nexport const setAction = (value: Action) => {\r\n  action.value = value\r\n}\r\n\r\nexport const useAction = () => {\r\n  return action\r\n}\r\n","import { VuePageStackContext } from 'src/type/interface'\r\n\r\nlet context: VuePageStackContext\r\n\r\nexport const setContext = (ctx: VuePageStackContext) => {\r\n  context = ctx\r\n}\r\n\r\nexport const useContext = () => {\r\n  return context\r\n}\r\n","import { VNode } from 'vue'\r\n\r\nexport type StackItem = {\r\n  key: string\r\n  vnode: VNode\r\n}\r\n\r\nexport type StackProps = {\r\n  value?: StackItem[]\r\n}\r\n\r\nexport class Stack {\r\n  private value: StackItem[]\r\n  constructor(props?: StackProps) {\r\n    this.value = props?.value ?? []\r\n  }\r\n  push(item: StackItem) {\r\n    return this.value.push(item)\r\n  }\r\n  pop() {\r\n    return this.value.pop()\r\n  }\r\n  removeAfter(key: string) {\r\n    const index = this.value.findIndex(item => item.key === key)\r\n    if (index === -1) {\r\n      return undefined\r\n    }\r\n    const start = index + 1\r\n    if (start >= this.value.length) {\r\n      return undefined\r\n    }\r\n    return this.value.splice(start, this.value.length - index - 1)\r\n  }\r\n  clear() {\r\n    const value = this.value\r\n    this.value = []\r\n    return value\r\n  }\r\n  get(key: string) {\r\n    return this.value.find(item => item.key === key)?.vnode\r\n  }\r\n}\r\n\r\nexport const useStack = (() => {\r\n  const stack = new Stack()\r\n  return () => stack\r\n})()\r\n","import {\r\n  ComponentInternalInstance,\r\n  defineComponent,\r\n  getCurrentInstance,\r\n  PropType,\r\n  RendererElement,\r\n  RendererNode,\r\n  setTransitionHooks,\r\n  VNode\r\n} from 'vue'\r\nimport { RouteLocationNormalizedLoaded } from 'vue-router'\r\n\r\nimport { ShapeFlags } from '@vue/shared'\r\n\r\nimport { useConfig } from 'src/config'\r\nimport { Action } from 'src/config/enum'\r\nimport { useAction } from 'src/core/action'\r\nimport { useContext } from 'src/core/context'\r\nimport { StackItem, useStack } from 'src/core/stack'\r\n\r\ntype ComponentContext = {\r\n  renderer: any\r\n  activate: (\r\n    vnode: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    isSVG: boolean,\r\n    optimized: boolean\r\n  ) => void\r\n  deactivate: (vnode: VNode) => void\r\n}\r\n\r\nconst enum MoveType {\r\n  ENTER = 0,\r\n  LEAVE = 1,\r\n  REORDER = 2\r\n}\r\n\r\nfunction resetShapeFlag(vnode: VNode) {\r\n  let shapeFlag = vnode.shapeFlag\r\n  if (shapeFlag & ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE) {\r\n    shapeFlag -= ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE\r\n  }\r\n  if (shapeFlag & ShapeFlags.COMPONENT_KEPT_ALIVE) {\r\n    shapeFlag -= ShapeFlags.COMPONENT_KEPT_ALIVE\r\n  }\r\n  vnode.shapeFlag = shapeFlag\r\n}\r\n\r\nexport const StackRouterView = defineComponent({\r\n  inheritRef: true,\r\n  __isKeepAlive: true,\r\n  props: {\r\n    component: {\r\n      type: Object as PropType<VNode>,\r\n      default: undefined\r\n    },\r\n    route: {\r\n      type: Object as PropType<RouteLocationNormalizedLoaded>,\r\n      required: true\r\n    }\r\n  },\r\n  setup(props) {\r\n    const stack = useStack()\r\n    const action = useAction()\r\n    const { keyName } = useConfig()\r\n    const instance = getCurrentInstance() as any\r\n    const sharedContext = instance.ctx as ComponentContext\r\n    const parentSuspense = instance.suspense\r\n    const {\r\n      renderer: {\r\n        p: patch,\r\n        m: move,\r\n        um: _unmount,\r\n        o: { createElement }\r\n      }\r\n    } = sharedContext\r\n    const storageContainer = createElement('div')\r\n\r\n    sharedContext.activate = (vnode, container, anchor, isSVG, optimized) => {\r\n      const instance = vnode.component as ComponentInternalInstance\r\n      move(vnode, container, anchor, MoveType.ENTER, parentSuspense)\r\n      // in case props have changed\r\n      patch(\r\n        instance.vnode,\r\n        vnode,\r\n        container,\r\n        anchor,\r\n        instance,\r\n        parentSuspense,\r\n        isSVG,\r\n        optimized\r\n      )\r\n    }\r\n\r\n    sharedContext.deactivate = (vnode: VNode) => {\r\n      move(vnode, storageContainer, null, MoveType.LEAVE, parentSuspense)\r\n    }\r\n\r\n    function unmount(items?: StackItem[]) {\r\n      if (!items) {\r\n        return\r\n      }\r\n      while (items.length) {\r\n        const item = items.pop()\r\n        if (item) {\r\n          // reset the shapeFlag so it can be properly unmounted\r\n          resetShapeFlag(item.vnode)\r\n          _unmount(item.vnode, instance, parentSuspense)\r\n        }\r\n      }\r\n    }\r\n\r\n    return () => {\r\n      const { component, route } = props\r\n      const key = route.query[keyName] as string\r\n      const cachedVNode = stack.get(key)\r\n      const vnode = component\r\n\r\n      if (!vnode) {\r\n        return vnode\r\n      }\r\n\r\n      if (cachedVNode) {\r\n        unmount(stack.removeAfter(key))\r\n\r\n        if (cachedVNode.transition) {\r\n          // recursively update transition hooks on subTree\r\n          setTransitionHooks(cachedVNode, cachedVNode.transition)\r\n        }\r\n\r\n        // avoid vnode being mounted as fresh\r\n        cachedVNode.shapeFlag |= ShapeFlags.COMPONENT_KEPT_ALIVE\r\n        return cachedVNode\r\n      }\r\n\r\n      if (action.value === Action.REPLACE) {\r\n        unmount(stack.clear())\r\n      }\r\n\r\n      stack.push({\r\n        key,\r\n        vnode\r\n      })\r\n\r\n      // avoid vnode being unmounted\r\n      vnode.shapeFlag |= ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE\r\n\r\n      return vnode\r\n    }\r\n  }\r\n})\r\n\r\nexport const initComponent = () => {\r\n  const { componentName } = useConfig()\r\n  const { app } = useContext()\r\n\r\n  app.component(componentName, StackRouterView)\r\n}\r\n","import { useConfig } from 'src/config'\r\nimport { Action } from 'src/config/enum'\r\nimport { useAction } from 'src/core/action'\r\nimport { createKey, isEmpty } from 'src/lib/utils'\r\n\r\nimport { useContext } from './context'\r\n\r\nexport const initGuard = () => {\r\n  const { keyName } = useConfig()\r\n  const { router } = useContext()\r\n  const action = useAction()\r\n  router.beforeEach((to, from) => {\r\n    if (isEmpty(to.query[keyName])) {\r\n      to.query[keyName] = createKey()\r\n      const replace =\r\n        action.value === Action.REPLACE || isEmpty(from.query[keyName])\r\n      return {\r\n        hash: to.hash,\r\n        path: to.path,\r\n        name: to.name,\r\n        params: to.params,\r\n        query: to.query,\r\n        meta: to.meta,\r\n        replace: replace\r\n        // force: replace\r\n      }\r\n    }\r\n    return true\r\n  })\r\n}\r\n","import { Plugin } from 'vue'\r\n\r\nimport { initComponent } from 'src/components/StackRouterView'\r\nimport { setConfig } from 'src/config'\r\nimport { VuePageStackOptions } from 'src/type/interface'\r\n\r\nimport { setContext } from './context'\r\nimport { initGuard } from './guard'\r\nimport { initRouterProxy } from './proxy'\r\n\r\nconst VuePageStack: Plugin = {\r\n  install(app, options: VuePageStackOptions) {\r\n    const { router } = options\r\n    if (!router) {\r\n      throw Error('\\n vue-router is necessary. \\n\\n')\r\n    }\r\n\r\n    setConfig(options)\r\n    setContext({ app, router })\r\n\r\n    initRouterProxy()\r\n    initComponent()\r\n    initGuard()\r\n  }\r\n}\r\n\r\nexport default VuePageStack\r\n","import { Action } from 'src/config/enum'\r\n\r\nimport { setAction } from './action'\r\nimport { useContext } from './context'\r\n\r\n/**\r\n * 包装一层 router api，用于跟踪执行的动作\r\n */\r\nexport const initRouterProxy = () => {\r\n  const { app, router } = useContext()\r\n\r\n  const routerPush = router.push.bind(router)\r\n  const routerGo = router.go.bind(router)\r\n  const routerReplace = router.replace.bind(router)\r\n  const routerBack = router.back.bind(router)\r\n  const routerForward = router.forward.bind(router)\r\n\r\n  // 还没安装 vue-router\r\n  if (!app.config.globalProperties.$router) {\r\n    app.use(router)\r\n  }\r\n\r\n  router.push = to => {\r\n    setAction(Action.PUSH)\r\n    return routerPush(to)\r\n  }\r\n\r\n  router.go = n => {\r\n    setAction(Action.GO)\r\n    routerGo(n)\r\n  }\r\n\r\n  router.replace = to => {\r\n    setAction(Action.REPLACE)\r\n    return routerReplace(to)\r\n  }\r\n\r\n  router.back = () => {\r\n    setAction(Action.BACK)\r\n    routerBack()\r\n  }\r\n\r\n  router.forward = () => {\r\n    setAction(Action.FORWARD)\r\n    routerForward()\r\n  }\r\n}\r\n"],"names":["isNil","value","isEmpty","defaultConfig","keyName","componentName","config","setConfig","options","data","keys","result","key","pick","useConfig","Action","action","PUSH","setAction","useAction","context","useContext","Stack","[object Object]","props","this","item","push","pop","index","findIndex","start","length","splice","find","vnode","useStack","stack","resetShapeFlag","shapeFlag","StackRouterView","defineComponent","inheritRef","__isKeepAlive","component","type","Object","default","undefined","route","required","instance","getCurrentInstance","sharedContext","ctx","parentSuspense","suspense","renderer","p","patch","m","move","um","_unmount","o","createElement","storageContainer","unmount","items","activate","container","anchor","isSVG","optimized","deactivate","query","cachedVNode","get","removeAfter","transition","setTransitionHooks","REPLACE","clear","initGuard","router","beforeEach","to","from","len","Math","random","toString","substring","createKey","replace","hash","path","name","params","meta","VuePageStack","app","Error","routerPush","bind","routerGo","go","routerReplace","routerBack","back","routerForward","forward","globalProperties","$router","use","n","GO","BACK","FORWARD","initRouterProxy","initComponent"],"mappings":"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"}